// Everthing you need to make it work Emjoy Skids
Vector3 Cac(Vector3& zaz, Vector3& daz) 
{

	Vector3 dalte = zaz - daz;
	Vector3 ongle;
	float hpm = sqrtf(dalte.x * dalte.x + dalte.y * dalte.y);
	ongle.y = atan(dalte.y / dalte.x) * 57.295779513082f;
	ongle.x = (atan(dalte.z / hpm) * 57.295779513082f) * -1.f;
	if (dalte.x >= 0.f) ongle.y += 180.f;
	return ongle;
}
Vector3 inline LimitRotation(Vector3 startRotation, Vector3 endRotation)
{
	Vector3 ret;
	auto scale = G::Smooth;
	auto currentRotation = startRotation;
	ret.x = (endRotation.x - startRotation.x) / scale + startRotation.x;
	ret.y = (endRotation.y - startRotation.y) / scale + startRotation.y;
	return ret;
}



if (G::pMem and targetpawn and PlayerController->IsInputKeyDown(ue::FKey(RBKey))) 
{

    Vector3 headtarget = targetpawn->GetBone(98);
    //std::cout << head.x << " getbone\n";
    Vector2 headtarget_w2s = PlayerCameraManager->ProjectWorldLocationToScreen(width, height, headtarget);
    auto o_CamRott = PlayerCameraManager->GetCameraLocation();
    auto NewRotation = Cac(o_CamRott, headtarget);
    if (NewRotation.x == 0 && NewRotation.y == 0) return;
    if (G::Smooth > 0)
    NewRotation = LimitRotation(o_CamRot, NewRotation);
    NewRotation.z = 0;
    PlayerController->ClientSetRotation(NewRotation, false);
}